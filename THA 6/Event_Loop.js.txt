///////////////-------------------------------------- THA  DAY - 6   ------------------------------------------------///////////////
//////////////------------------------ EVENT LOOP  &  ASYNC PROGRAMMING ---------------------------------////////////////


//--------------- Event Loop ---------------------//

// ---------- How JavaScript Works--------------//


//-------Tell me JavaScript what are you ? -----//

// A Single-threaded
// Non-blocking
// Asynchronous
// Concurrent
// Language

// I have a 
// Call Stack
// An Event Loop  
// A Callback Queue
// Some Other APIs
// And Stuff

// Hey V8, Do you have a 
// Call Stack
// An Event Loop  
// A Callback Queue
// Some Other APIs
// And Stuff

//  I have a 
// Call Stack
// And a Heap Only !

// JS 
// > Heap -> Memory Allocation
// > Stack -> Execution Context

// The Call Stack
// -> One thread == One Call Stack == One Thing at a Time


//------------------------- Call Stack -------------------------------//

function multiply(a, b) {
    return a * b;
}

function square(a) {
    return multiply(a, a);
}

function printSquare(n) {
    var squared = square(n);
    console.log(squared);
}

printSquare(4);

// Stack ->   < main() < printSquare(4) < square(a) < multiply(a,b)      [ LIFO ]


function foo() {
    return foo();
}
foo();

// If we Call the Above Code then We will get the Error.. Like This..
// Range Error: Maximum call stack size exceeded
// because of.. Infinite Loop.


// Blocking
// what happens when things are slow ? 

var foo = $.getsync('//foo.com');
var bar = $.getsync('//bar.com');
var qux = $.getsync('//qux.com');

console.log(foo);
console.log(bar);
console.log(qux);


//------------------------ Event Loop ------------ Loupe -----------------------------//

$.on('button', 'click', function onClick() {
    setTimeout(function timer() {
        console.log('You clicked the button!');
    }, 2000);
});

console.log("Hi!");

setTimeout(function timeout() {
    console.log("Click the button!");
}, 5000);

console.log("Welcome to loupe.");


// Event Listeners are also Web APIs.


//  Go the Website..  Write > Event Loop
//  Loupe > http://latentflip.com